/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package papersystem;

import papersystem.helper.DBManager;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JViewport;
import papersystem.helper.PaperPrinter;

/**
 *
 * @author Abbasi
 */
public class BoardPatternPanel extends javax.swing.JPanel {

    /**
     * Creates new form BoardPatternBody
     */
    DBManager myDBManager = DBManager.getInstance();
    JPanel panelforCBL = new JPanel(new FlowLayout(FlowLayout.LEFT));
    CheckBoxList chapters;

    public BoardPatternPanel() {
        initComponents();

        bGeneratePaper.setIcon((new ImageIcon(getClass().getResource(("gen.png")))));
        bGeneratePaper.setBorderPainted(false);
        bGeneratePaper.setFocusPainted(false);
        bGeneratePaper.setContentAreaFilled(false);

        subjectComboBox.addItemListener(new ItemListener() {

            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    updateChapterCBL();
                }
            }
        });
        classComboBox.addItemListener(new ItemListener() {

            @Override
            public void itemStateChanged(ItemEvent e) {
                updateSubjectComboBox();
                updateChapterCBL();
            }
        });

        panelforCBL.setOpaque(false);
        updateClassComboBox();
        updateSubjectComboBox();
        updateChapterCBL();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        classComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        subjectComboBox = new javax.swing.JComboBox();
        allChaptersRB = new javax.swing.JRadioButton();
        selectedChaptersRB = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        tfPaper = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        bGeneratePaper = new javax.swing.JButton();
        checkBoxListHolder = new javax.swing.JScrollPane();

        setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Class:");

        classComboBox.setLightWeightPopupEnabled(false);
        classComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Subject:");

        subjectComboBox.setLightWeightPopupEnabled(false);
        subjectComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectComboBoxActionPerformed(evt);
            }
        });

        allChaptersRB.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        allChaptersRB.setSelected(true);
        allChaptersRB.setText("All Chapters");
        allChaptersRB.setOpaque(false);
        allChaptersRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allChaptersRBActionPerformed(evt);
            }
        });

        selectedChaptersRB.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        selectedChaptersRB.setText("Selected Chapters");
        selectedChaptersRB.setOpaque(false);
        selectedChaptersRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectedChaptersRBActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Paper Name:");

        tfPaper.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Date:");

        bGeneratePaper.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bGeneratePaper.setText("Generate Paper");
        bGeneratePaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGeneratePaperActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(classComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(checkBoxListHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tfPaper, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(bGeneratePaper, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(allChaptersRB)
                        .addGap(18, 18, 18)
                        .addComponent(selectedChaptersRB)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(classComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allChaptersRB)
                    .addComponent(selectedChaptersRB))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tfPaper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(bGeneratePaper))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkBoxListHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    //when ever class selection is changed.
    private void classComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classComboBoxActionPerformed

    }//GEN-LAST:event_classComboBoxActionPerformed

    private void allChaptersRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allChaptersRBActionPerformed
        if (allChaptersRB.isSelected()) {
            System.out.println("All Chapters");
            chapters.saveState();
            chapters.selectAll();
            chapters.disableEditing();
            selectedChaptersRB.setSelected(false);
        } else {
            allChaptersRB.setSelected(true);
        }
    }//GEN-LAST:event_allChaptersRBActionPerformed

    private void selectedChaptersRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectedChaptersRBActionPerformed
        if (selectedChaptersRB.isSelected()) {
            System.out.println("Selected Chapters");
            chapters.loadState();
            chapters.enableEditing();
            allChaptersRB.setSelected(false);
        } else {
            selectedChaptersRB.setSelected(true);
        }
    }//GEN-LAST:event_selectedChaptersRBActionPerformed

    private void subjectComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectComboBoxActionPerformed

    }//GEN-LAST:event_subjectComboBoxActionPerformed

    private void bGeneratePaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGeneratePaperActionPerformed
        PaperPrinter pp = new PaperPrinter();
        //TODO... Date... Instruction
        if (tfPaper.getText() == null || tfPaper.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Please enter a Paper Name.");
            return;
        }
        try {
            System.out.println("Year: " + (jXDatePicker1.getDate().getYear() + 1900) + " Month: " + (jXDatePicker1.getDate().getMonth()) + " Day: " + (jXDatePicker1.getDate().getDate()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please Select a date.");
            return;
        }
        String date = (jXDatePicker1.getDate().getDate()) + "-" + PaperSystem.getMonthText((jXDatePicker1.getDate().getMonth() + 1)) + "-" + (jXDatePicker1.getDate().getYear() + 1900);

        String classx = classComboBox.getSelectedItem().toString();
        String subject = subjectComboBox.getSelectedItem().toString();
        int patternID = DBManager.getInstance().findPatternID("Board Pattern",
                DBManager.getInstance().findSubjectID(subject, classx, null));
        new PaperPrinter().print(chapters.getSelected(),
                tfPaper.getText(), date, "3 Hrs",
                null, classx, subject,
                patternID, "default", MainScreen.mainFrame);
    }//GEN-LAST:event_bGeneratePaperActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton allChaptersRB;
    private javax.swing.JButton bGeneratePaper;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane checkBoxListHolder;
    private javax.swing.JComboBox classComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private javax.swing.JRadioButton selectedChaptersRB;
    private javax.swing.JComboBox subjectComboBox;
    public javax.swing.JTextField tfPaper;
    // End of variables declaration//GEN-END:variables

    private void updateClassComboBox() {
        classComboBox.removeAllItems();
        for (String s : myDBManager.getClasses(null)) {
            classComboBox.addItem(s);
        }
    }

    private void updateSubjectComboBox() {
        subjectComboBox.removeAllItems();
        for (String s : myDBManager.getSubjects(null, classComboBox.getSelectedItem().toString())) {
            subjectComboBox.addItem(s);
        }
        updateChapterCBL();
    }

    private void updateChapterCBL() {
        System.out.println(classComboBox.getSelectedItem().toString());
        System.out.println(subjectComboBox.getSelectedItem().toString());
        chapters = new CheckBoxList(1, 2, myDBManager.getChapters(null, classComboBox.getSelectedItem().toString(), subjectComboBox.getSelectedItem().toString()));

        selectedChaptersRB.setSelected(false);
        allChaptersRB.setSelected(true);
        chapters.disableEditing();
        panelforCBL.removeAll();
        panelforCBL.add(chapters);
        checkBoxListHolder.setViewportView(panelforCBL);
        //checkBoxListHolder.getViewport().setBackground(Color.white);
        checkBoxListHolder.repaint();
        revalidate();
    }

}
